const jwt = require("jsonwebtoken");
const bcrypt = require("bcryptjs");
const models = require("../models.js");
const config = require("../config.js");

signup = async (req, res) => {
  // Save User to Database
  try {
    const user = await models.User.create({
      email: req.body.email,
      password: bcrypt.hashSync(req.body.password, 8),
    });
    if (user) res.send({ message: "User registered successfully!" });
  } catch (error) {
    res.status(500).send({ message: error.message });
  }
};

signin = async (req, res) => {
  try {
    const user = await models.User.findOne({
      where: {
        email: req.body.email,
      },
    });

    if (!user) {
      return res.status(404).send({ message: "User Not found." });
    }

    const passwordIsValid = bcrypt.compareSync(
      req.body.password,
      user.password
    );

    if (!passwordIsValid) {
      return res.status(401).send({
        message: "Invalid Password!",
      });
    }

    const token = jwt.sign({ id: user.id }, config.secret, {
      algorithm: "HS256",
      allowInsecureKeySizes: true,
      expiresIn: 86400, // 24 hours
    });

    req.session.token = token;

    return res.status(200).send({
      id: user.id,
      email: user.email,
    });
  } catch (error) {
    return res.status(500).send({ message: error.message });
  }
};

module.exports = { signup, signin };
