const models = require("../models.js");
const express = require("express");
const axios = require("axios");
var stringSimilarity = require("string-similarity");
const config = require("../config.js");

const router = express.Router();

router.use((req, res, next) => {
  console.log("Time: ", Date.now());
  next();
});

router.post("/Vulnerabilities", async (req, res) => {
  let devices = req.body.devices;
  let currVendor = {};
  let cveData = [];
  let products = [];
  for (let i = 0; i < devices.length; i++) {
    let product = devices[i].product;
    let vendorWords = devices[i].vendor
      .toLowerCase()
      .replace(/[\.,?!]/g, "")
      .split(" ");
    let vendor = "";
    for (let j = 0; j < vendorWords.length; j++) {
      vendor += vendorWords[j];
      console.log(vendor);
      await axios
        .get(`${config.cveURL}/vendors/${vendor}`, {
          headers: { "Content-Type": "application/json" },
          auth: { username: config.cveUser, password: config.cvePassword },
        })
        .then((response) => {
          currVendor = response.data.name;
          products = response.data.products;
        })
        .catch((error) => {
          console.log(error);
        });
      if (currVendor.length > 0) {
        break;
      }
    }
    if (currVendor.length === 0) {
      continue;
    } else {
      let match = stringSimilarity.findBestMatch(product, products);
      let index = match.bestMatchIndex;

      if (match.bestMatch.rating >= 0.6) {
        await axios
          .get(
            `${config.cveURL}/vendors/${currVendor}/products/${products[index]}/cve`,
            {
              headers: { "Content-Type": "application/json" },
              auth: { username: config.cveUser, password: config.cvePassword },
            }
          )
          .then((response) => {
            cveData.push(response.data);
          })
          .catch((error) => {
            console.log(error);
          });
      }
    }
  }
  if (cveData.length === 0) {
    console.log("204");
    res.status(204).send(cveData);
  } else {
    console.log("200");
    res.send(cveData);
  }
});

router.post("/CVEData", async (req, res) => {
  let cves = req.body.cves;
  let cveData = [];
  for (let i = 0; i < cves.length; i++) {
    await axios
      .get(`${config.cveURL}/cve/${cves[i]}`, {
        headers: { "Content-Type": "application/json" },
        auth: { username: config.cveUser, password: config.cvePassword },
      })
      .then((response) => {
        cveData[i] = response.data;
      })
      .catch((error) => {
        console.log(error);
      });
  }
  if (cveData.length === 0) {
    res.status(204);
  } else {
    res.status(200).send(cveData);
  }
});

module.exports = router;
